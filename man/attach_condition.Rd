% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/attach_condition.R
\name{attach_condition}
\alias{attach_condition}
\title{Attach the simuluation conditions for easier reference}
\usage{
attach_condition(condition)
}
\arguments{
\item{condition}{a \code{data.frame} containing the \code{condition} names}
}
\description{
This function accepts the \code{condition} object used to indicate the design conditions
and makes the variable names available in the enviroment from which it is called. This
is useful primarily as a convinience function when you prefer to call the variable names
in \code{condition} directly rather than indixing with \code{condition$sample_size} or
\code{with(condition, sample_size)}, for example.
}
\details{
The behaviour of this function is very similar to \code{\link{attach}},
however it is enviroment specific, and
therefore only remains defined in a given function rather than in the Global Enviroment.
Hence, this function is much safer to use than the \code{\link{attach}}, which
incidentally should never be used in your code.
}
\examples{
\dontrun{

# does not use attach_condition
mygenerate <- function(condition, fixed_objects = NULL){
    N1 <- condition$sample_sizes_group1
    N2 <- condition$sample_sizes_group2
    sd <- condition$standard_deviations

    group1 <- rnorm(N1)
    group2 <- rnorm(N2, sd=sd)
    dat <- data.frame(group = c(rep('g1', N1), rep('g2', N2)),
                      DV = c(group1, group2))
    dat
}

# similar to above, but using the attach_condition() function instead of indexing
mygenerate <- function(condition, fixed_objects = NULL){
    attach_condition(condition)
    N1 <- sample_sizes_group1
    N2 <- sample_sizes_group2
    sd <- standard_deviations

    group1 <- rnorm(N1)
    group2 <- rnorm(N2, sd=sd)
    dat <- data.frame(group = c(rep('g1', N1), rep('g2', N2)),
                      DV = c(group1, group2))
    dat
}
}
}
\seealso{
\code{\link{runSimulation}}, \code{\link{Generate}}
}

