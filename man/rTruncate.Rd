% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rTruncate.R
\name{rTruncate}
\alias{rTruncate}
\title{Generate a random set of values within a truncated range}
\usage{
rTruncate(n, rfun, range, ..., redraws = 100)
}
\arguments{
\item{n}{number of observations to generate. This should be the first argument passed
to \code{rfun}}

\item{rfun}{a function to generate random values. Function can return
a numeric/integer vector or matrix, and additional arguments
requred for this function are passed through the argument \code{...}}

\item{range}{a numeric vector of length two, where the first element indicates the
lower bound and the second the upper bound. When values are generated outside these
two bounds then data are redrawn until the bounded criteria is met. When the
output of \code{rfun} is a matrix then this input can be specified as a matrix with
two rows, where each the first row corresponds to the lower bound and the second row
the upper bound for each generated column in the output}

\item{...}{additional arguments to be passed to \code{rfun}}

\item{redraws}{the maximum number of redraws to take before terminating the iterative
sequence. This is in place as a safety in case the \code{range} is too small given the
random number generator, causing too many consecutive rejections. Default is 100}
}
\value{
either a numeric vector or matrix, where all values are within the
  desired \code{range}
}
\description{
Function generates data given a supplied random number generating function that
are constructed to fall within a particular range. Sampled values outside this range
are discarded and re-sampled until the desired criteria has been met.
}
\details{
In simulations it is often useful to draw numbers from truncated distributions
rather than across the full theoretical range. For instance,
}
\examples{
\dontrun{

# n = 1000 truncated normal vector between [-2,3]
vec <- rTruncate(1000, rnorm, c(-2,3))
summary(vec)

# truncated correlated multivariate normal between [-1,4]
mat <- rTruncate(1000, mvtnorm::rmvnorm, c(-1,4),
   sigma = matrix(c(2,1,1,1),2))
summary(mat)

# truncated correlated multivariate normal between [-1,4] for the
#  first column and [0,3] for the second column
mat <- rTruncate(1000, mvtnorm::rmvnorm, cbind(c(-1,4), c(0,3)),
   sigma = matrix(c(2,1,1,1),2))
summary(mat)

# truncated chi-square with df = 4 between [2,6]
vec <- rTruncate(1000, rchisq, c(2,6), df = 4)
summary(vec)

}
}
\references{
Sigal, M. J., & Chalmers, R. P. (2016). Play it again: Teaching statistics with Monte
Carlo simulation. \code{Journal of Statistics Education, 24}(3), 136-156.
\url{http://www.tandfonline.com/doi/full/10.1080/10691898.2016.1246953}
}
\seealso{
\code{\link{runSimulation}}
}
